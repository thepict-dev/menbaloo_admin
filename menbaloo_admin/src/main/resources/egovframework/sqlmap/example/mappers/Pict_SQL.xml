<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pict_admin.service.impl.PictMapper">
	<!-- 사용자관리 -->
	<select id="menbal_list" resultType="pictVO">
		select *
		from users 
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				nickname LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by created_at desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="menbal_list_cnt" resultType="Integer">
		select count(idx) from users
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				nickname LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>

		order by created_at desc
	</select>

	<delete id="menbal_del" parameterType="pictVO">
		delete from users where idx = #{idx}
	</delete>
	

	<!-- 피드관리 -->
	<select id="feed_list" resultType="pictVO">
		SELECT u.nickname, f.feed_id, f.idx, f.image_url, f.text, f.created_at, 
		ifnull((select count(idx) from like_feed lf where lf.feed_id = f.feed_id group by lf.feed_id), 0) as like_cnt,
		exists (select user_id from report_feed rf where rf.feed_id = f.feed_id) as report_yn
		FROM feeds f 
		left outer join users u on u.user_id = f.user_id
		where 1=1

		<if test="search_text != null and search_text != ''">
			and (
				f.text LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by f.created_at desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="feed_list_cnt" resultType="Integer">
		SELECT count(f.idx) 
		FROM feeds f 
		left outer join users u on u.user_id = f.user_id
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				f.text LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>

		order by f.created_at desc
	</select>
	
	<delete id="feed_del" parameterType="pictVO">
		delete from feeds where idx = #{idx}
	</delete>
	
	
	<select id="feed_reply_list" resultType="pictVO">
		select c.*, u.nickname
		from comments c
		left outer join users u on u.user_id = c.user_id
		where 1=1
		and feed_id = #{feed_id}
		order by c.created_at desc
		
	</select>
	
	
	<delete id="feed_reply_del" parameterType="pictVO">
		delete from comments where idx = #{idx}
	</delete>
	
	<!-- 코스이력관리 -->
	<select id="history_list" resultType="pictVO">
		SELECT r.*, u.nickname
		FROM record_walking r 
		left outer join users u on r.user_id = u.user_id
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				u.nickname LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		
		order by r.created_at desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="history_list_cnt" resultType="Integer">
		SELECT count(r.idx)
		FROM record_walking r 
		left outer join users u on r.user_id = u.user_id
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				u.nickname LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		
	</select>
	
	<delete id="history_del" parameterType="pictVO">
		delete from record_walking where idx = #{idx}
	</delete>
	
	
	<!-- 행사 관리 -->
	<select id="event_list_cnt" resultType="Integer">
		SELECT count(e.idx)
		FROM event_table e
		
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				e.title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
	</select>
	
	<select id="event_list" resultType="pictVO">
		select * from event_table e
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				e.title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		order by e.created_at desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="event_list_one" resultType="pictVO">
		select * from event_table where idx = #{idx}
	</select>
	
	<delete id="event_delete" parameterType="pictVO">
		delete from event_table where idx = #{idx}
	</delete>
	
	<update id="event_update" parameterType="pictVO">
		update event_table set title =#{title}, event_date = #{event_date}, address =#{address}, depart = #{depart}, location = #{location}
		<if test="image != null and image != ''">
			, image = #{image}
		</if>
		,created_at = now()
		where idx = #{idx}
	</update>
	
	<insert id="event_insert" parameterType="pictVO">
		INSERT INTO event_table
			(
			 title, event_date, address, depart, location, image, created_at
			)
		VALUES (
			 #{title}, #{event_date}, #{address}, #{depart}, #{location}, #{image}, now()
			  ) 
	</insert>
	
	
	<!-- 코스 관리 -->
	<select id="course_list_cnt" resultType="Integer">
		SELECT count(c.idx)
		FROM course_table c
		
		where 1=1
		and use_at = 'Y'
		<if test="search_text != null and search_text != ''">
			and (
				c.title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
	</select>
	
	<select id="course_list" resultType="pictVO">
		select * from course_table c
		where 1=1
		<if test="search_text != null and search_text != ''">
			and (
				c.title LIKE CONCAT('%', #{search_text}, '%')
			) 
		</if>
		and use_at = 'Y'
		order by c.created_at desc
		LIMIT #{limit} OFFSET #{startNumber}
	</select>
	
	<select id="course_list_one" resultType="pictVO">
		select * from course_table where idx = #{idx}
	</select>
	
	<update id="course_delete" parameterType="pictVO">
		update course_table set use_at = 'N' where idx= #{idx}
	</update>
	
	
	<!-- 여기부터 작업 이어서 해야함 -->
	<update id="course_update" parameterType="pictVO">
		update course_table 
		set administrative =#{administrative}, 
		local = #{local}, 
		title =#{title}, 
		address = #{address}, 
		length = #{length},
		introduce = #{introduce},
		course_type = #{course_type},
		send_type = #{send_type},
		toilet = #{toilet},
		foot = #{foot},
		management = #{management},
		vr_link = #{vr_link}
		<if test="thumb_url != null and thumb_url != ''">
			, thumb_url = #{thumb_url}
		</if>
		, use_at = 'Y'
		, created_at = now()
		where idx = #{idx}
	</update>
	
	<insert id="course_insert" parameterType="pictVO">
		INSERT INTO course_table
			(
			 administrative, local, title, address, length, introduce, course_type, send_type, toilet, foot, management, vr_link, thumb_url, use_at, created_at
			)
		VALUES (
			 #{administrative}, #{local}, #{title}, #{address}, #{length}, #{introduce}, #{course_type}, #{send_type}, #{toilet}, #{foot}, #{management}, #{vr_link}, #{thumb_url}, #{use_at}, now()
			  ) 
	</insert>
	
</mapper>